

echo(onEcho: Function(data: String))
  -> send: Function(data: String)

scandir(path: String, onEntry: Function(name: String, type: String))

readstream(
  path: String,
  onRead: Function(chunk: Buffer),
  onEnd: Function(error: Optional(String))
)

writestream(path: String, mode: Integer)
  -> write: Function(chunk: Buffer),
     close: Function(error: Optional(String))

readfile(path: String) -> data: Buffer

writefile(path: String, mode: Integer, data: Buffer)

readlink(path: String) -> target: String

symlink(path: String, target: String)

unlink(path: String)

mkdir(path: String, recursive: Boolean)

rmdir(path: String, recursive: Boolean)

lstat(path: String) -> stat: {
  mtime: Number,
  atime: Number,
  size: Integer,
  type: String,
  mode: Integer,
  uid: Integer,
  gid: Integer
}

chmod(path: String, mode: Integer)

chown(path: String, uid: Integer, gid: Integer)

utime(path: String, atime: Number, mtime: Number)

rename(path: String, newPath: String)

realpath(path: String) -> fullPath: String

diskusage(
  path: String,
  depth: Integer,
  onEntry: Callback(name: String, size: Integer)
)

user(uid: Integer) -> username: String
group(gid: Integer) -> groupname: String

pty(
  shell: String,
  uid: Integer,
  gid: Integer,
  cols: Integer,
  rows: Integer,
  onTitle: Function(title: String),
  onOut: Function(chunk: Buffer),
  onExit: Function(code: Integer, signal: Integer)
) -> write: Function(chunk: Buffer),
     close: Function(error: Optional(String)),
     resize: Function(cols: Integer, rows: Integer)
